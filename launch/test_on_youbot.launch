<launch>

  <!-- /////////////////////// -->
  <!--        Parameters       -->
  <!-- /////////////////////// -->

  <!-- By default, don't start rviz -->
  <arg name="vis" default="false"/>

  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />

  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />

  <!-- For the laser -->
  <arg name="port" default="/dev/ttyACM0" />


  <!-- /////////////////////// -->
  <!--     State Publishers    -->
  <!-- /////////////////////// -->

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />


  <!-- /////////////////////// -->
  <!--      youBot Driver      -->
  <!-- /////////////////////// -->

  <param name="robot_description" textfile="$(find youbot_description)/urdf/compiled/youbot.urdf"/>
  <include file="$(find youbot_driver_ros_interface)/launch/youbot_driver.launch"/>


  <!-- /////////////////////// -->
  <!--         MoveIt!         -->
  <!-- /////////////////////// -->

  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find youbot_moveit)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>  
    <arg name="fake_execution" value="true"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>


  <!-- /////////////////////// -->
  <!--        navstack         -->
  <!-- /////////////////////// -->

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
	<param name="base_global_planner" value="navfn/NavfnROS"/>
	<rosparam file="$(find youbot_object_grasp)/config/global_costmap_params.yaml" command="load" ns="global_costmap"/>
	<rosparam file="$(find youbot_object_grasp)/config/costmap_params.yaml" command="load" ns="local_costmap"/>
	<rosparam file="$(find youbot_object_grasp)/config/move_base_params.yaml" command="load"/>
	<rosparam file="$(find youbot_object_grasp)/config/eband_planner_params.yaml" command="load"/>

	<param name="base_local_planner" value="eband_local_planner/EBandPlannerROS"/>

	<remap from="cmd_vel" to="/youbot/cmd_vel"/>
	<remap from="odom" to="/youbot/odom"/>
  </node>

  <node name="odom_tf_pub" pkg="youbot_object_grasp" type="odom_tf_pub" output="screen">
	<remap from="/odom" to="/youbot/odom"/>
  </node>

  <node pkg="map_server" type="map_server" name="map_server" args="$(find youbot_object_grasp)/worlds/EmptyRoom/occupancy/map.yaml"/>


  <!-- /////////////////////// -->
  <!--       Laser Data        -->
  <!-- /////////////////////// -->

  <!-- Works with the laser data coming from Gazebo -->
  <node pkg="amcl" type="amcl" name="amcl" args="scan:=/youbot/scan_front" output="screen">
	<param name="odom_frame_id" value="/youbot/odom"/>
	<param name="base_frame_id" value="/youbot/base_link"/>
	<param name="global_frame_id" value="map"/>
	<param name="odom_model_type" value="omni"/>
  </node>

  <node pkg="tf" type="static_transform_publisher" name="laser_scan_pub" args="0.3 0.0 0.08 0.0 0.0 0.0 base_footprint laser 50" />
  <node pkg="tf" type="static_transform_publisher" name="base_link_pub" args="0.0 0.0 0.0 0.0 0.0 0.0 base_footprint base_link 50" />

  <!-- start hokuyo node -->
  <node pkg="hokuyo_node" type="hokuyo_node" name="laser_driver_node" >
    <param name="max_ang" value="1.57" />
    <param name="min_ang" value="-1.57" />
    <param name="port" value="$(arg port)" />
  </node>


  <!-- /////////////////////// -->
  <!--         OpenNI          -->
  <!-- /////////////////////// -->

  <include file="$(find openni2_launch)/launch/openni2.launch">
    <arg name="depth_registration" value="true"/>
  </include>


  <!-- /////////////////////// -->
  <!--       Arm Control       -->
  <!-- /////////////////////// -->

  <node name="arm_control" pkg="youbot_object_grasp" type="arm_control" output="screen"/>


  <!-- /////////////////////// -->
  <!--   Object Segmentation   -->
  <!-- /////////////////////// -->

  <include file="$(find pcl_auto_seg)/launch/seg_block.launch"/>

</launch>
